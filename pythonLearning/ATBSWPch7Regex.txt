Practice Questions
1. What is the function that creates Regex objects? \\ re.compile

2. Why are raw strings often used when creating Regex objects? \\ don't have to escape backslashes

3. What does the search() method return? \\ the first string it finds that matches

4. How do you get the actual strings that match the pattern from a Match object? \\ matchstring = match.groups(text)

5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2? \\ whole string, first 3 numbs, then xxx-xxxx format nums

6. Parentheses and periods have specific meanings in regular expression syntax. How would you specify that you want a regex to match actual parentheses and period characters? \\ escape character \

7. The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other? \\ if there are parentheses, forcing it to return more than group[0]

8. What does the | character signify in regular expressions? \\ or pipe

9. What two things does the ? character signify in regular expressions? \\ make a pattern non greedy, match 0 or 1 of pattern

10. What is the difference between the + and * characters in regular expressions? \\ + 1 or more, * 0 or more

11. What is the difference between {3} and {3,5} in regular expressions? \\ match a pattern three times, match a patter between 3 and 5 times

12. What do the \d, \w, and \s shorthand character classes signify in regular expressions? \\ digit character, word character, space character

13. What do the \D, \W, and \S shorthand character classes signify in regular expressions? \\ not match of the above. not digit, etc...

14. What is the difference between .* and .*? \\ greedy, non greedy

15. What is the character class syntax to match all numbers and lowercase letters? \\ [a-z0-9]

16. How do you make a regular expression case-insensitive? \\ re.IGNORECASE in re.compile

17. What does the . character normally match? What does it match if re.DOTALL is passed as the second argument to re.compile()? \\ everything but \n, everything

18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return? \\ X drummers, X pipers, five rings, X hens

19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do? \\ multiline strings, ignore spaces. allows you to make the code more readable 

20. How would you write a regex that matches a number with commas for every three digits? It must match the following:  \\ (r"\d{1,3}(,\d{3})*")

'42'
'1,234'
'6,368,745'
but not the following:

'12,34,567' (which has only two digits between the commas)
'1234' (which lacks commas)

21. How would you write a regex that matches the full name of someone whose last name is Watanabe? You can assume that the first name that comes before it will always be one word that begins with a capital letter. 
The regex must match the following: \\ (r'[A-Z][a-zA-Z]+\sWantanabe)

'Haruto Watanabe'
'Alice Watanabe'
'RoboCop Watanabe'
but not the following:

'haruto Watanabe' (where the first name is not capitalized)
'Mr. Watanabe' (where the preceding word has a nonletter character)
'Watanabe' (which has no first name)
'Haruto watanabe' (where Watanabe is not capitalized)

22. How would you write a regex that matches a sentence where
the first word is either Alice, Bob, or Carol; 
the second word is either eats, pets, or throws; 
the third word is apples, cats, or baseballs; 
and the sentence ends with a period?
 This regex should be case-insensitive. It must match the following: \\ re.compile(r'(alice|bob|carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.', re.IGNORECASE)

'Alice eats apples.'
'Bob pets cats.'
'Carol throws baseballs.'
'Alice throws Apples.'
'BOB EATS CATS.'
but not the following:

'RoboCop eats apples.'
'ALICE THROWS FOOTBALLS.'
'Carol eats 7 cats.'


\\

